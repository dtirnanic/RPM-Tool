@*@model IEnumerable<RPM_Tool.Models.Building>*@
@model RPM_Tool.ViewModel.LandlordHomeViewModel

@{
    ViewData["Title"] = "BuildingsList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Portfolio</h1>
<p>
    <a asp-action="Create">Add Building</a>
</p>
<div id="chart_div"></div>
<table class="table">
    <thead>
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.Name)*@
                Buildings
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Buildings)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.BuildingId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.BuildingId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.BuildingId">Delete</a> |
                    <a asp-action="Index" asp-controller="Tenants" asp-route-id="@item.BuildingId">View Tenants</a>
                </td>
            </tr>
        }
    </tbody>
</table>
                  
@section Scripts {
    <!--Load the AJAX API-->
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        // Load the Visualization API and the corechart package.
        // url article https://developers.google.com/chart/interactive/docs/quick_start
        google.charts.load('current', { 'packages': ['corechart'] });
        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

      // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it
        function drawChart() {
            // Create the data table.
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Expense');
            data.addColumn('number', 'Amount');
            data.addRows([
                ['Mortgage and Escrow', @Model.TotalMortgage],
                ['Vendors', @Model.TotalVendor],
                ['Utilities', @Model.TotalUtility]
            ]);
            // Set chart options
            var options = { 
                'title': 'Portfolio expense rollup',
                'width' : 400,
                'height' : 300
                //chartArea: {left:0, width:"400", height:"95%"}
            };
            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
            chart.draw(data, options);
        }
    </script>
}
